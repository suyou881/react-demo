//가장 상단에는 속성값의 타입을 정리해준다.
//함수의 propTypes 라는 속성으로 객체를 입력해 줄 수 있다.
//이 안에 속성값의 타입 정보를 입력할 수 있따. 방법은 나중에
//속성값 타입 정보를 가장 위에 적는 이유는?
//컴포넌트를 사용하는 입장에서는 그 컴포넌트를 사용할 때 속성값을 입력해야 한다.
//그 때 올바른 값을 입력하려면 타입 정보를 정확하게 알아야 하는데
//이 때 상단에 속성값이 있는게 가장 빠르고 편하다.
//컴포넌트 작성자 입장에서도 속성값 타입은 다른 코드 못지않게 중요하다.
MyComponent.propTypes = {
    // ...
};

//컴포넌트 함수를 작성할 때 함수에 이름을 부여해 주는게 좋다
//이름을 작성하지 않으면 리액트 개발자 도구에서 개발을 하기가 힘들다
//이름을 정해주지 않고 리액트 개발자 도구에서 보면 anynimous 라고 뜬다.
//그리고 컴포넌트의 매개변수는 명명된 매개변수 문법으로 작성하는게 좋다.
//이렇게 하지 않고 만약 props로 받아서 처리를 하면 앞에 props.을 반복해서
//입력해줘야 하기 때문에 다소 불편하다.
// export default function MyComponent(props) {
//  props.prop1...
//  props.prop2...
//     }
export default function MyComponent({ prop1, prop2 }) {
// ...
}

//컴포넌트 바깥에 있는 변수와 함수는 파일의 가장 밑에 정의하는게 좋다.
//중요도에서 속성값 타입과 컴포넌트 코드보다는 중요도에서 낮기 때문이다.
//변수명은 대문자로 작성해주는게 좋다. 그래야 컴포넌트 코드 안에서
//다른 코드와 섞여 있을 때 변하지 않는 외부 변수라는 것을 파악하기 쉽다.
//그리고 다소 커다란 크기의 객체를 생성할 때는 외부에서 생성해서 사용하는게 좋다.
//만약 컴포넌트 내부에서 생성해서 사용하게 되면 컴포넌트 함수가 실행이 될 때마다
//객체가 매번 생성이 되기 때문에 성능상 좋지 않다.
//가독성 측면에서도 좋다.
const COLUMNES = [
{ id: 1, name: 'phoneNumber', width: 200, color: 'white' },
{ id: 1, name: 'city', width: 100, color: 'grey' },
// ...
];
const URL_PRODUCT_LIST = '/api/products';
function getTotalPrice({ price, total }) {
// ...
}
